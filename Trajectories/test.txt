
public class test extends CommandOpMode {
    public static double xkP = 7;
    public static double xkI = 0.015;
    public static double xkD = 0.04;

    public static double ykP = 7;
    public static double ykI = 0.015;
    public static double ykD = 0.05;

    public static double tkP = 3;
    public static double tkI = 1.0;
    public static double tkD = 0.001;

    public static int VEL = 30;
    public static int ACCEL = 30;
    public static double RUNTIME_TOLERANCE_PCT = .7;

    private final TrajectoryConfig trajectoryConfig = new TrajectoryConfig(VEL, ACCEL);

    @Override
    public void initialize() {
               
        ChassisSubsystem chassisSubsystem = new ChassisSubsystem(hardwareMap);
        CameraSubsystem cameraSubsystem   = new CameraSubsystem(hardwareMap);
        BlinkinSubsystem blinkinSubsystem = new BlinkinSubsystem(hardwareMap);
        SpatulaSubsystem spatulaSubsystem = new SpatulaSubsystem(hardwareMap);
        SlideSubsystem slideSubsystem     = new SlideSubsystem(hardwareMap);

        // Setup trajectories

        HolonomicDriveController controller = new HolonomicDriveController(
                new Pose2d(1, 1, Rotation2d.fromDegrees(3)),
                new PIDController(xkP, xkI, xkD),
                new PIDController(ykP, ykI, ykD),
                new ProfiledPIDController(
                        tkP, tkI, tkD, new TrapezoidProfile.Constraints(10000, 10000)
                )
        );
               
        schedule(
            new FollowTrajectory(
                chassisSubsystem, controller, new TrajectorySegment(
                    Rotation2d.fromDegrees(0),
                    new Translation2d[0],
                    new Pose2d(52.632, -17.568, Rotation2d.fromDegrees(0)),
                    Rotation2d.fromDegrees(0),
                    trajectoryConfig
                ),
                RUNTIME_TOLERANCE_PCT
            )
        );
    };
}